# This flake was initially generated by fh, the CLI for FlakeHub (version 0.1.9)
{
  inputs = {
    flake-schemas.url = "https://flakehub.com/f/DeterminateSystems/flake-schemas/*.tar.gz";
    nixpkgs.url = "https://flakehub.com/f/NixOS/nixpkgs/0.1.*.tar.gz";
  };

  outputs = { self, flake-schemas, nixpkgs }:
    let
      supportedSystems = [ "x86_64-linux" ];
      forEachSupportedSystem = f: nixpkgs.lib.genAttrs supportedSystems (system: f {
        pkgs = import nixpkgs { inherit system; };
      });
    in
    {
      schemas = flake-schemas.schemas;

      formatter = forEachSupportedSystem ({ pkgs }: pkgs.nixpkgs-fmt);

      packages = forEachSupportedSystem ({ pkgs }: rec {
        default = unisoc_unlock;
        unisoc_unlock = pkgs.python3Packages.buildPythonApplication {
          pname = "unisoc_unlock";
          version = "0.2.0";
          src = pkgs.fetchFromGitHub {
            rev = "583aa80191356450bea3c9e7f183d77a8675a48d";
            owner = "patrislav1";
            repo = "unisoc-unlock";
            hash = "sha256-EzegRI4vBBbFRB3m/K/xe7qRznbC0RL5gKkqtySiedc=";
          };
          format = "pyproject";
          dependencies = with pkgs.python3Packages; [ hatchling pycryptodome pyusb libusb1 ] ++ [ pkgs.libusb1 pkgs.libusb ];
        };
      });

      devShells = forEachSupportedSystem ({ pkgs }: {
        default = (pkgs.buildFHSUserEnv {
          name = "fhs-usb";
          targetPkgs = pkgs: (with pkgs; [
            udev
            android-tools
            python3
            hatch
          ]);
          multiPkgs = pkgs: (with pkgs; [
            udev
            libusb
          ]);
          runScript = "${pkgs.lib.getExe pkgs.nushell}";
        }).env;
      });
    };
}
